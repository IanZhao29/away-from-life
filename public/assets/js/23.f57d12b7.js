(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{572:function(t,a,e){"use strict";e.r(a);var s=e(12),r=Object(s.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"原型模式"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#原型模式"}},[t._v("#")]),t._v(" 原型模式")]),t._v(" "),e("p",[t._v("用一个已经创建的实例作为原型，通过复制该原型对象来创建一个和原型相同或相似的新对象。在这里，原型实例指定了要创建的对象的种类。用这种方式创建对象非常高效，根本无须知道对象创建的细节。")]),t._v(" "),e("h2",{attrs:{id:"原型模式的结构"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#原型模式的结构"}},[t._v("#")]),t._v(" 原型模式的结构")]),t._v(" "),e("p",[t._v("原型模式包含以下主要角色。")]),t._v(" "),e("ol",[e("li",[t._v("抽象原型类：规定了具体原型对象必须实现的接口。")]),t._v(" "),e("li",[t._v("具体原型类：实现抽象原型类的 clone() 方法，它是可被复制的对象。")]),t._v(" "),e("li",[t._v("访问类：使用具体原型类中的 clone() 方法来复制新的对象。")])]),t._v(" "),e("h2",{attrs:{id:"深拷贝"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#深拷贝"}},[t._v("#")]),t._v(" 深拷贝")]),t._v(" "),e("h3",{attrs:{id:"实现方式1-每个类重写clone方法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#实现方式1-每个类重写clone方法"}},[t._v("#")]),t._v(" 实现方式1-每个类重写clone方法")]),t._v(" "),e("ol",[e("li",[t._v("修改")])])])}),[],!1,null,null,null);a.default=r.exports}}]);